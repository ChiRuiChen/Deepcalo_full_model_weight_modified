-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject is
port (
    em_barrel_V_data_V_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    layer55_out_V_data_V_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    const_size_in_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    const_size_out_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    s3_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    s3_V_ce0 : OUT STD_LOGIC;
    s3_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    s3_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    s3_V_we0 : OUT STD_LOGIC;
    b3_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    b3_V_ce0 : OUT STD_LOGIC;
    b3_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    b3_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    b3_V_we0 : OUT STD_LOGIC;
    w4_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    w4_V_ce0 : OUT STD_LOGIC;
    w4_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    w4_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    w4_V_we0 : OUT STD_LOGIC;
    b4_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    b4_V_ce0 : OUT STD_LOGIC;
    b4_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    b4_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    b4_V_we0 : OUT STD_LOGIC;
    w9_V_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    w9_V_ce0 : OUT STD_LOGIC;
    w9_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    w9_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    w9_V_we0 : OUT STD_LOGIC;
    b9_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    b9_V_ce0 : OUT STD_LOGIC;
    b9_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    b9_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    b9_V_we0 : OUT STD_LOGIC;
    w13_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    w13_V_ce0 : OUT STD_LOGIC;
    w13_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    w13_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    w13_V_we0 : OUT STD_LOGIC;
    b13_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    b13_V_ce0 : OUT STD_LOGIC;
    b13_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    b13_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    b13_V_we0 : OUT STD_LOGIC;
    w18_V_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
    w18_V_ce0 : OUT STD_LOGIC;
    w18_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    w18_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    w18_V_we0 : OUT STD_LOGIC;
    b18_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    b18_V_ce0 : OUT STD_LOGIC;
    b18_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    b18_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    b18_V_we0 : OUT STD_LOGIC;
    w22_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    w22_V_ce0 : OUT STD_LOGIC;
    w22_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    w22_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    w22_V_we0 : OUT STD_LOGIC;
    b22_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    b22_V_ce0 : OUT STD_LOGIC;
    b22_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    b22_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    b22_V_we0 : OUT STD_LOGIC;
    w27_V_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
    w27_V_ce0 : OUT STD_LOGIC;
    w27_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    w27_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    w27_V_we0 : OUT STD_LOGIC;
    b27_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    b27_V_ce0 : OUT STD_LOGIC;
    b27_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    b27_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    b27_V_we0 : OUT STD_LOGIC;
    w31_V_address0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    w31_V_ce0 : OUT STD_LOGIC;
    w31_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    w31_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    w31_V_we0 : OUT STD_LOGIC;
    b31_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    b31_V_ce0 : OUT STD_LOGIC;
    b31_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    b31_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    b31_V_we0 : OUT STD_LOGIC;
    w36_V_address0 : OUT STD_LOGIC_VECTOR (18 downto 0);
    w36_V_ce0 : OUT STD_LOGIC;
    w36_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    w36_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    w36_V_we0 : OUT STD_LOGIC;
    b36_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    b36_V_ce0 : OUT STD_LOGIC;
    b36_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    b36_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    b36_V_we0 : OUT STD_LOGIC;
    w40_V_address0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    w40_V_ce0 : OUT STD_LOGIC;
    w40_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    w40_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    w40_V_we0 : OUT STD_LOGIC;
    b40_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    b40_V_ce0 : OUT STD_LOGIC;
    b40_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    b40_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    b40_V_we0 : OUT STD_LOGIC;
    w45_V_address0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    w45_V_ce0 : OUT STD_LOGIC;
    w45_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    w45_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    w45_V_we0 : OUT STD_LOGIC;
    b45_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    b45_V_ce0 : OUT STD_LOGIC;
    b45_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    b45_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    b45_V_we0 : OUT STD_LOGIC;
    w49_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    w49_V_ce0 : OUT STD_LOGIC;
    w49_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    w49_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    w49_V_we0 : OUT STD_LOGIC;
    b49_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    b49_V_ce0 : OUT STD_LOGIC;
    b49_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    b49_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    b49_V_we0 : OUT STD_LOGIC;
    w53_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    w53_V_ce0 : OUT STD_LOGIC;
    w53_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    w53_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    w53_V_we0 : OUT STD_LOGIC;
    b53_V_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    b53_V_ce0 : OUT STD_LOGIC;
    b53_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    b53_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    b53_V_we0 : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    const_size_in_1_ap_vld : OUT STD_LOGIC;
    const_size_out_1_ap_vld : OUT STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC );
end;


architecture behav of myproject is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "myproject,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu9eg-ffvb1156-2-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=0.000000,HLS_SYN_LAT=0,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2,HLS_SYN_LUT=11,HLS_VERSION=2019_2}";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_logic_1 : STD_LOGIC := '1';

    signal ap_rst_n_inv : STD_LOGIC;
    signal Block_proc_U0_ap_start : STD_LOGIC;
    signal Block_proc_U0_ap_done : STD_LOGIC;
    signal Block_proc_U0_ap_continue : STD_LOGIC;
    signal Block_proc_U0_ap_idle : STD_LOGIC;
    signal Block_proc_U0_ap_ready : STD_LOGIC;
    signal Block_proc_U0_const_size_in_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal Block_proc_U0_const_size_in_1_ap_vld : STD_LOGIC;
    signal Block_proc_U0_const_size_out_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal Block_proc_U0_const_size_out_1_ap_vld : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal Block_proc_U0_start_full_n : STD_LOGIC;
    signal Block_proc_U0_start_write : STD_LOGIC;

    component Block_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        const_size_in_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        const_size_in_1_ap_vld : OUT STD_LOGIC;
        const_size_out_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        const_size_out_1_ap_vld : OUT STD_LOGIC );
    end component;



begin
    Block_proc_U0 : component Block_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_proc_U0_ap_start,
        ap_done => Block_proc_U0_ap_done,
        ap_continue => Block_proc_U0_ap_continue,
        ap_idle => Block_proc_U0_ap_idle,
        ap_ready => Block_proc_U0_ap_ready,
        const_size_in_1 => Block_proc_U0_const_size_in_1,
        const_size_in_1_ap_vld => Block_proc_U0_const_size_in_1_ap_vld,
        const_size_out_1 => Block_proc_U0_const_size_out_1,
        const_size_out_1_ap_vld => Block_proc_U0_const_size_out_1_ap_vld);




    Block_proc_U0_ap_continue <= ap_const_logic_1;
    Block_proc_U0_ap_start <= ap_start;
    Block_proc_U0_start_full_n <= ap_const_logic_1;
    Block_proc_U0_start_write <= ap_const_logic_0;
    ap_done <= Block_proc_U0_ap_done;
    ap_idle <= Block_proc_U0_ap_idle;
    ap_ready <= Block_proc_U0_ap_ready;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sync_continue <= ap_const_logic_1;
    ap_sync_done <= Block_proc_U0_ap_done;
    ap_sync_ready <= Block_proc_U0_ap_ready;
    b13_V_address0 <= ap_const_lv5_0;
    b13_V_ce0 <= ap_const_logic_0;
    b13_V_d0 <= ap_const_lv16_0;
    b13_V_we0 <= ap_const_logic_0;
    b18_V_address0 <= ap_const_lv6_0;
    b18_V_ce0 <= ap_const_logic_0;
    b18_V_d0 <= ap_const_lv16_0;
    b18_V_we0 <= ap_const_logic_0;
    b22_V_address0 <= ap_const_lv6_0;
    b22_V_ce0 <= ap_const_logic_0;
    b22_V_d0 <= ap_const_lv16_0;
    b22_V_we0 <= ap_const_logic_0;
    b27_V_address0 <= ap_const_lv7_0;
    b27_V_ce0 <= ap_const_logic_0;
    b27_V_d0 <= ap_const_lv16_0;
    b27_V_we0 <= ap_const_logic_0;
    b31_V_address0 <= ap_const_lv7_0;
    b31_V_ce0 <= ap_const_logic_0;
    b31_V_d0 <= ap_const_lv16_0;
    b31_V_we0 <= ap_const_logic_0;
    b36_V_address0 <= ap_const_lv8_0;
    b36_V_ce0 <= ap_const_logic_0;
    b36_V_d0 <= ap_const_lv16_0;
    b36_V_we0 <= ap_const_logic_0;
    b3_V_address0 <= ap_const_lv2_0;
    b3_V_ce0 <= ap_const_logic_0;
    b3_V_d0 <= ap_const_lv16_0;
    b3_V_we0 <= ap_const_logic_0;
    b40_V_address0 <= ap_const_lv8_0;
    b40_V_ce0 <= ap_const_logic_0;
    b40_V_d0 <= ap_const_lv16_0;
    b40_V_we0 <= ap_const_logic_0;
    b45_V_address0 <= ap_const_lv8_0;
    b45_V_ce0 <= ap_const_logic_0;
    b45_V_d0 <= ap_const_lv16_0;
    b45_V_we0 <= ap_const_logic_0;
    b49_V_address0 <= ap_const_lv8_0;
    b49_V_ce0 <= ap_const_logic_0;
    b49_V_d0 <= ap_const_lv16_0;
    b49_V_we0 <= ap_const_logic_0;
    b4_V_address0 <= ap_const_lv4_0;
    b4_V_ce0 <= ap_const_logic_0;
    b4_V_d0 <= ap_const_lv16_0;
    b4_V_we0 <= ap_const_logic_0;
    b53_V_address0 <= ap_const_lv1_0;
    b53_V_ce0 <= ap_const_logic_0;
    b53_V_d0 <= ap_const_lv16_0;
    b53_V_we0 <= ap_const_logic_0;
    b9_V_address0 <= ap_const_lv5_0;
    b9_V_ce0 <= ap_const_logic_0;
    b9_V_d0 <= ap_const_lv16_0;
    b9_V_we0 <= ap_const_logic_0;
    const_size_in_1 <= Block_proc_U0_const_size_in_1;
    const_size_in_1_ap_vld <= Block_proc_U0_const_size_in_1_ap_vld;
    const_size_out_1 <= Block_proc_U0_const_size_out_1;
    const_size_out_1_ap_vld <= Block_proc_U0_const_size_out_1_ap_vld;
    s3_V_address0 <= ap_const_lv2_0;
    s3_V_ce0 <= ap_const_logic_0;
    s3_V_d0 <= ap_const_lv16_0;
    s3_V_we0 <= ap_const_logic_0;
    w13_V_address0 <= ap_const_lv14_0;
    w13_V_ce0 <= ap_const_logic_0;
    w13_V_d0 <= ap_const_lv16_0;
    w13_V_we0 <= ap_const_logic_0;
    w18_V_address0 <= ap_const_lv15_0;
    w18_V_ce0 <= ap_const_logic_0;
    w18_V_d0 <= ap_const_lv16_0;
    w18_V_we0 <= ap_const_logic_0;
    w22_V_address0 <= ap_const_lv16_0;
    w22_V_ce0 <= ap_const_logic_0;
    w22_V_d0 <= ap_const_lv16_0;
    w22_V_we0 <= ap_const_logic_0;
    w27_V_address0 <= ap_const_lv17_0;
    w27_V_ce0 <= ap_const_logic_0;
    w27_V_d0 <= ap_const_lv16_0;
    w27_V_we0 <= ap_const_logic_0;
    w31_V_address0 <= ap_const_lv18_0;
    w31_V_ce0 <= ap_const_logic_0;
    w31_V_d0 <= ap_const_lv16_0;
    w31_V_we0 <= ap_const_logic_0;
    w36_V_address0 <= ap_const_lv19_0;
    w36_V_ce0 <= ap_const_logic_0;
    w36_V_d0 <= ap_const_lv16_0;
    w36_V_we0 <= ap_const_logic_0;
    w40_V_address0 <= ap_const_lv20_0;
    w40_V_ce0 <= ap_const_logic_0;
    w40_V_d0 <= ap_const_lv16_0;
    w40_V_we0 <= ap_const_logic_0;
    w45_V_address0 <= ap_const_lv20_0;
    w45_V_ce0 <= ap_const_logic_0;
    w45_V_d0 <= ap_const_lv16_0;
    w45_V_we0 <= ap_const_logic_0;
    w49_V_address0 <= ap_const_lv16_0;
    w49_V_ce0 <= ap_const_logic_0;
    w49_V_d0 <= ap_const_lv16_0;
    w49_V_we0 <= ap_const_logic_0;
    w4_V_address0 <= ap_const_lv11_0;
    w4_V_ce0 <= ap_const_logic_0;
    w4_V_d0 <= ap_const_lv16_0;
    w4_V_we0 <= ap_const_logic_0;
    w53_V_address0 <= ap_const_lv8_0;
    w53_V_ce0 <= ap_const_logic_0;
    w53_V_d0 <= ap_const_lv16_0;
    w53_V_we0 <= ap_const_logic_0;
    w9_V_address0 <= ap_const_lv13_0;
    w9_V_ce0 <= ap_const_logic_0;
    w9_V_d0 <= ap_const_lv16_0;
    w9_V_we0 <= ap_const_logic_0;
end behav;
